// Generated by Dagger (https://dagger.dev).
package com.dionep.ribscage.ui.root;

import com.uber.rib.core.Interactor_MembersInjector;
import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RootInteractor_MembersInjector implements MembersInjector<RootInteractor> {
  private final Provider<RootInteractor.RootPresenter> presenterProvider;

  private final Provider<RootInteractor.RootPresenter> presenterProvider2;

  public RootInteractor_MembersInjector(Provider<RootInteractor.RootPresenter> presenterProvider,
      Provider<RootInteractor.RootPresenter> presenterProvider2) {
    this.presenterProvider = presenterProvider;
    this.presenterProvider2 = presenterProvider2;
  }

  public static MembersInjector<RootInteractor> create(
      Provider<RootInteractor.RootPresenter> presenterProvider,
      Provider<RootInteractor.RootPresenter> presenterProvider2) {
    return new RootInteractor_MembersInjector(presenterProvider, presenterProvider2);
  }

  @Override
  public void injectMembers(RootInteractor instance) {
    Interactor_MembersInjector.injectPresenter(instance, presenterProvider.get());
    injectPresenter(instance, presenterProvider2.get());
  }

  @InjectedFieldSignature("com.dionep.ribscage.ui.root.RootInteractor.presenter")
  public static void injectPresenter(RootInteractor instance,
      RootInteractor.RootPresenter presenter) {
    instance.presenter = presenter;
  }
}
